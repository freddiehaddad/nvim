--[[
'                                      ▄▀                                       ',
'                         ░     ░░  ▄█▓▌ ░░ ░   ░                               ',
'▄▄    ▀▀▓▓█▄▄▄   ▄▄███▄          ▄▓████▄                   ▄▄    ▀▀▓▓▄▄▄       ',
' ▀▓▓▓▄▄  ▀▓███▓▓▄ ▀██▓▓█▄▄▄    ▄▓▓▓▓█████▄▄    ▄ ■▄▓▄▄      ▀▓▓▓▄▄   ▀███▓▓▄   ',
'  ▐▓████▓▄  ▀███▓▓▄ ██▓▌  ▀▓██▄ ▀▀▀████▓▀▀███▄▄▄   ▀████▄▄   ▐▓████▓▓▄ ▀███▓▓▄ ',
'   ████▓▓▌   ▐███▓▓▌ ▀▀▀■  ▐█████▓▄ ▀ ▄▄▄████▓▀ ▄▀   █▓███▓▄  ████▓▓▌   ▐███▓▓▌',
'   ▐████▓   ▄████▓▀ ▄▓▓▄    ███▓█▌ ▄██████▓▀▀ ▄▓▌    ▐▓████▓▓▄ ▀███▓   ▄████▓▀ ',
'    ████▓ ▀▀▀▀▀▀ ▄▄███▀██▄▄ ▐█▓▓▓ ████▓▀▀  ▄██▓▓▌     █▀▓▀██▓▓▌ ███▓■▀██▀▀▀    ',
'    ███▓▓▌■▀▓██▄▄ ▀██▄▓▄██▀▀■██▓▌  ▀██▄█▓▄▄ ▀▀█▓▓     ▐█▄███▓▓▌ ██▓▓  ▐███▄▄   ',
'   ▐██▓▓▓▓  ▐███▓▓▄ ▀███▀    ██▓▓    ▀█████▓▓▄▄▄      ▐█████▓▓ ▐█▓▓▓   ▓███▓▓▄ ',
'  ▄█████▓▓▓▄ ████▓▓▌ ██▓▌   ▐███▓▓     ▀██████▓▓▓▓▀  ▄█████▓▀ ▄████▓▌  ▐████▓▓▌',
'■▀▀▀   ▀▀▓▀ ▐█████▓▓ ▐▓▓▓▓▄▄▓████▓▓      ▀███▓▓▀  ■▄▓██▓▓▀▀ ▄█▀   ▀▀▀  ▀▀▀███▓▓',
'          ▄▓▓▓███▓▓▓▌ ▀▓▓▀▀     ▀█▓▓       ▓▓▀      ▀▀▀    ▄▀               ▀▀▓',
'                ▀▀▀▓▓▄            ▀▓▓▄      ▀▄           ▄                     ',
' <cH!RiGOR>          ▀▓             ▀▓▌        ▀ ■ ▄ ■ ▀     1 9 1 1           ',
'                      ▀▄             ▐▌                                        ',
'                                                                               ',
'__|_____ ___________________________________________________________________|__',
'  |                                                                        .|  ',
'  :     _ ___ _________                        -  N  E  O  V  i  M  -    .::|  ',
'__|___________________________________________________________________ _____|__',
'  |                                                                         |  ',
'                                                                               ',
':                                                                             :',
'│                                                  ─  N  E  O  V  i  M  ─     │',
'│                                                                             │',
'└────── ───── ── ── ─ ── ──    ─             ─     ─ ─ ── ─── ──── ─── ────fh─┘',
'▀███████████████████████████████████████████████▄██████████████████▄██████████▀',
' ▐▀██▀     ▀▀▄ ▀▀▀▀▀▀▀▄▀▀▀▀▀▀▀▀■▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▄▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█fh██',
'  ▐█▀▄      ▄▄ ▀                                                ▄▀▀▀▄▄   ████▌',
'  ▀   ▀▀▄▄▄■   ▀▄           -  N  E  O  V  i  M  -           ■▀       ▀▄▄███▀ ',
' ▀                                                                         ▀▄ ',

'█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█   '
'█ │░███▀█▀▀▀▀▀▓████▓▄ ▀▀▀▀ │░████▓▄   │▓████▓▄  █   '
'█ │▒███████  │▓███████     │▒███████  │▓███████ █   '
'█ │▓███████  │▓███████     │▓███████  │▓███████ █   ' 
'▀ │▓███████  │▓███████     │▓███████  │▓███████ █   '
'▀ │▓███████  │▓███████▄ ▄  │▓███████  │▓███████ █   '
'█ │▓███████                │▓███████   ▓███████ █▄▄▄'
'█ │▓███████▀▀ ▀    ▀       │▓███████▀▀▀▓█▄█████▄ ▄ █'
'█▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀▀▀▀█▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄█'
'  <fh>  █ ▀ █  .::[ n e o v i m · c o n f i g ]::.  '
'        ▀▀▀▀▀                                       '
'                                      n e o v i m   ',
'▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄',
        ▄▄▄▄▄
        █ ▄ █
█▀▀▀▀▀▀▀▀ ▄ ▀▀▀▀▀ ▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█
█ │░███████  │▓███████▀ │░███▀█▀▀▀▀▀▀▀ ▀ ▀▀▀▀ │░███▀█▀▀▀▀▀▓████▓▄  █
█ │▒███████  │▓███████  │▒███████  │▓███████▀ │▒███████  │▓███████ █
█ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████ █
▀ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████ █▄▄▄
▀ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████▄ ▄ █
█ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████               █
█ │▓███████▄▄▄▄▄█▄█▓▀   │▓███████▄▄▄▄▄█▄████  │▓███████▀▀ ▀    ▀      █
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀ ▀ ▀▀
.::[ u n i t e d · c r ‘ c k i n g · f o r c e ]::. █ ▀ █ Antibody<SAC>
                                                    ▀▀▀▀▀
          ________  _ __ _____            /\            
_ __ ____ |      /____ ____   \  /\____ _/  \___ __ __ _
     \_  \|     /_   /     \   \/   /___/    \  ___     
      /   \    / /  /_  \   \  /   /   /      \/   \    
     /   \    /    / / _/   /\    /   /         /   \   
     \____\  /\_____/\_____/  \__/___/________\/     \  
           \/                                  \_____/  

                                                        
__ _ ____  __  /\___  _ __ ______ __/\     n e o v i m  
             \/                       \  _ ___ __ _ ____
                                       \/               
--]]
return {
    'nvimdev/dashboard-nvim',
    lazy = false,
    opts = function()
        local header = [[
            █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█               
            █ │░███▀█▀▀▀▀▀▓████▓▄ ▀▀▀▀ │░████▓▄   │▓████▓▄  █               
            █ │▒███████  │▓███████     │▒███████  │▓███████ █               
            █ │▓███████  │▓███████     │▓███████  │▓███████ █               
            ▀ │▓███████  │▓███████     │▓███████  │▓███████ █               
            ▀ │▓███████  │▓███████▄ ▄  │▓███████  │▓███████ █               
            █ │▓███████                │▓███████   ▓███████ █▄▄▄            
            █ │▓███████▀▀ ▀    ▀       │▓███████▀▀▀▓█▄█████▄ ▄ █            
            █▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀▀▀▀█▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄█            
                    █ ▀ █                                                   
              <fh>  ▀▀▀▀▀                                                   
	]]
        local footer = [[
            ▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀            
                                                  n e o v i m               
	]]

        header = string.rep('\n', 14) .. header

        local opts = {
            theme = 'doom',
            hide = { statusline = true },
            config = {
                header = vim.split(header, '\n'),

                center = {
                    {
                        action = ':Telescope find_files',
                        icon = ' ',
                        desc = ' Find file',
                        key = 'f',
                    },
                    {
                        action = ':enew | startinsert',
                        icon = ' ',
                        desc = ' New file',
                        key = 'n',
                    },
                    {
                        action = ':Telescope oldfiles',
                        icon = ' ',
                        desc = ' Recent files',
                        key = 'r',
                    },
                    {
                        action = ':lua require("telescope.builtin").live_grep({additional_args = { "--no-ignore" }})',
                        icon = ' ',
                        desc = ' Find text',
                        key = 'g',
                    },
                    {
                        action = ':e $MYVIMRC',
                        icon = ' ',
                        desc = ' Config',
                        key = 'c',
                    },
                    {
                        action = ':lua require("persistence").load()',
                        icon = ' ',
                        desc = ' Restore Session',
                        key = 's',
                    },
                    {
                        action = ':Lazy',
                        icon = '󰒲 ',
                        desc = ' Lazy',
                        key = 'l',
                    },
                    {
                        action = ':Mason',
                        icon = ' ',
                        desc = ' Mason',
                        key = 'm',
                    },
                    {
                        action = ':qa',
                        icon = ' ',
                        desc = ' Quit',
                        key = 'q',
                    },
                },
                footer = vim.split(footer, '\n'),
            },
        }

        -- add spacing between the buttons
        for _, button in ipairs(opts.config.center) do
            button.desc = button.desc .. string.rep(' ', 40 - #button.desc)
            button.key_format = '  %s'
        end
        -- open dashboard after closing lazy
        if vim.o.filetype == 'lazy' then
            vim.api.nvim_create_autocmd('WinClosed', {
                pattern = tostring(vim.api.nvim_get_current_win()),
                once = true,
                callback = function()
                    vim.schedule(
                        function()
                            vim.api.nvim_exec_autocmds(
                                'UIEnter',
                                { group = 'dashboard' }
                            )
                        end
                    )
                end,
            })
        end

        return opts
    end,
}
