--[[
'                                      ▄▀                                       ',
'                         ░     ░░  ▄█▓▌ ░░ ░   ░                               ',
'▄▄    ▀▀▓▓█▄▄▄   ▄▄███▄          ▄▓████▄                   ▄▄    ▀▀▓▓▄▄▄       ',
' ▀▓▓▓▄▄  ▀▓███▓▓▄ ▀██▓▓█▄▄▄    ▄▓▓▓▓█████▄▄    ▄ ■▄▓▄▄      ▀▓▓▓▄▄   ▀███▓▓▄   ',
'  ▐▓████▓▄  ▀███▓▓▄ ██▓▌  ▀▓██▄ ▀▀▀████▓▀▀███▄▄▄   ▀████▄▄   ▐▓████▓▓▄ ▀███▓▓▄ ',
'   ████▓▓▌   ▐███▓▓▌ ▀▀▀■  ▐█████▓▄ ▀ ▄▄▄████▓▀ ▄▀   █▓███▓▄  ████▓▓▌   ▐███▓▓▌',
'   ▐████▓   ▄████▓▀ ▄▓▓▄    ███▓█▌ ▄██████▓▀▀ ▄▓▌    ▐▓████▓▓▄ ▀███▓   ▄████▓▀ ',
'    ████▓ ▀▀▀▀▀▀ ▄▄███▀██▄▄ ▐█▓▓▓ ████▓▀▀  ▄██▓▓▌     █▀▓▀██▓▓▌ ███▓■▀██▀▀▀    ',
'    ███▓▓▌■▀▓██▄▄ ▀██▄▓▄██▀▀■██▓▌  ▀██▄█▓▄▄ ▀▀█▓▓     ▐█▄███▓▓▌ ██▓▓  ▐███▄▄   ',
'   ▐██▓▓▓▓  ▐███▓▓▄ ▀███▀    ██▓▓    ▀█████▓▓▄▄▄      ▐█████▓▓ ▐█▓▓▓   ▓███▓▓▄ ',
'  ▄█████▓▓▓▄ ████▓▓▌ ██▓▌   ▐███▓▓     ▀██████▓▓▓▓▀  ▄█████▓▀ ▄████▓▌  ▐████▓▓▌',
'■▀▀▀   ▀▀▓▀ ▐█████▓▓ ▐▓▓▓▓▄▄▓████▓▓      ▀███▓▓▀  ■▄▓██▓▓▀▀ ▄█▀   ▀▀▀  ▀▀▀███▓▓',
'          ▄▓▓▓███▓▓▓▌ ▀▓▓▀▀     ▀█▓▓       ▓▓▀      ▀▀▀    ▄▀               ▀▀▓',
'                ▀▀▀▓▓▄            ▀▓▓▄      ▀▄           ▄                     ',
' <cH!RiGOR>          ▀▓             ▀▓▌        ▀ ■ ▄ ■ ▀     1 9 1 1           ',
'                      ▀▄             ▐▌                                        ',
'                                                                               ',
'__|_____ ___________________________________________________________________|__',
'  |                                                                        .|  ',
'  :     _ ___ _________                        -  N  E  O  V  i  M  -    .::|  ',
'__|___________________________________________________________________ _____|__',
'  |                                                                         |  ',
'                                                                               ',
':                                                                             :',
'│                                                  ─  N  E  O  V  i  M  ─     │',
'│                                                                             │',
'└────── ───── ── ── ─ ── ──    ─             ─     ─ ─ ── ─── ──── ─── ────fh─┘',
'▀███████████████████████████████████████████████▄██████████████████▄██████████▀',
' ▐▀██▀     ▀▀▄ ▀▀▀▀▀▀▀▄▀▀▀▀▀▀▀▀■▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▄▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█fh██',
'  ▐█▀▄      ▄▄ ▀                                                ▄▀▀▀▄▄   ████▌',
'  ▀   ▀▀▄▄▄■   ▀▄           -  N  E  O  V  i  M  -           ■▀       ▀▄▄███▀ ',
' ▀                                                                         ▀▄ ',

'█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█   '
'█ │░███▀█▀▀▀▀▀▓████▓▄ ▀▀▀▀ │░████▓▄   │▓████▓▄  █   '
'█ │▒███████  │▓███████     │▒███████  │▓███████ █   '
'█ │▓███████  │▓███████     │▓███████  │▓███████ █   ' 
'▀ │▓███████  │▓███████     │▓███████  │▓███████ █   '
'▀ │▓███████  │▓███████▄ ▄  │▓███████  │▓███████ █   '
'█ │▓███████                │▓███████   ▓███████ █▄▄▄'
'█ │▓███████▀▀ ▀    ▀       │▓███████▀▀▀▓█▄█████▄ ▄ █'
'█▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀▀▀▀█▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄█'
'  <fh>  █ ▀ █  .::[ n e o v i m · c o n f i g ]::.  '
'        ▀▀▀▀▀                                       '
        ▄▄▄▄▄
        █ ▄ █
█▀▀▀▀▀▀▀▀ ▄ ▀▀▀▀▀ ▀ ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█
█ │░███████  │▓███████▀ │░███▀█▀▀▀▀▀▀▀ ▀ ▀▀▀▀ │░███▀█▀▀▀▀▀▓████▓▄  █
█ │▒███████  │▓███████  │▒███████  │▓███████▀ │▒███████  │▓███████ █
█ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████ █
▀ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████ █▄▄▄
▀ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████  │▓███████▄ ▄ █
█ │▓███████  │▓███████  │▓███████  │▓███████  │▓███████               █
█ │▓███████▄▄▄▄▄█▄█▓▀   │▓███████▄▄▄▄▄█▄████  │▓███████▀▀ ▀    ▀      █
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀ ▀ ▀▀
.::[ u n i t e d · c r ‘ c k i n g · f o r c e ]::. █ ▀ █ Antibody<SAC>
                                                    ▀▀▀▀▀
          ________  _ __ _____            /\
_ __ ____ |      /____ ____   \  /\____ _/  \___ __ __ _
     \_  \|     /_   /     \   \/   /___/    \  ___
      /   \    / /  /_  \   \  /   /   /      \/   \
     /   \    /    / / _/   /\    /   /         /   \
     \____\  /\_____/\_____/  \__/___/________\/     \
           \/                                  \_____/
--]]
return {
	'goolord/alpha-nvim',
	config = function(_, dashboard)
		-- close Lazy and re-open when the dashboard is ready
		if vim.o.filetype == 'lazy' then
			vim.cmd.close()
			vim.api.nvim_create_autocmd('User', {
				pattern = 'AlphaReady',
				callback = function() require('lazy').show() end,
			})
		end

		require('alpha').setup(dashboard.opts)
	end,
	opts = function()
		local dashboard = require('alpha.themes.dashboard')
		local header = {
			'█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀█  █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ ▀ ▀▀▀▀█   ',
			'█ │░███▀█▀▀▀▀▀▓████▓▄ ▀▀▀▀ │░████▓▄   │▓████▓▄  █   ',
			'█ │▒███████  │▓███████     │▒███████  │▓███████ █   ',
			'█ │▓███████  │▓███████     │▓███████  │▓███████ █   ',
			'▀ │▓███████  │▓███████     │▓███████  │▓███████ █   ',
			'▀ │▓███████  │▓███████▄ ▄  │▓███████  │▓███████ █   ',
			'█ │▓███████                │▓███████   ▓███████ █▄▄▄',
			'█ │▓███████▀▀ ▀    ▀       │▓███████▀▀▀▓█▄█████▄ ▄ █',
			'█▄▄▄▄▄▄▄▄ ▀ █▀▀▀▀▀▀▀▀▀▀▀▀█▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄█',
			'  <fh>  █ ▀ █                                       ',
			'        ▀▀▀▀▀                                       ',
		}
		local footer = {
			'                                      n e o v i m   ',
			'▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄ ▄▄▄▄▄▄▄▄▄▄▄▄▄ ▄',
		}
		dashboard.section.header.val = header
		dashboard.section.footer.val = footer
		dashboard.section.buttons.val = {
			dashboard.button('f', ' ' .. ' Find file', ':Telescope find_files <CR>'),
			dashboard.button('n', ' ' .. ' New file', ':ene <BAR> startinsert <CR>'),
			dashboard.button('r', ' ' .. ' Recent files', ':Telescope oldfiles <CR>'),
			dashboard.button('g', ' ' .. ' Find text', ':Telescope live_grep <CR>'),
			dashboard.button('c', ' ' .. ' Config', ':e $MYVIMRC <CR>'),
			dashboard.button('s', ' ' .. ' Restore Session', ':lua require("persistence").load() <cr>'),
			dashboard.button('l', '󰒲 ' .. ' Lazy', ':Lazy<CR>'),
			dashboard.button('q', ' ' .. ' Quit', ':qa<CR>'),
		}
		for _, button in ipairs(dashboard.section.buttons.val) do
			button.opts.hl = 'AlphaHeader'
			button.opts.hl_shortcut = 'AlphaHeader'
		end
		dashboard.section.header.opts.hl = 'AlphaHeader'
		dashboard.section.buttons.opts.hl = 'AlphaButtons'
		dashboard.section.footer.opts.hl = 'AlphaHeader'
		dashboard.opts.layout[1].val = 8
		return dashboard
	end,
}
